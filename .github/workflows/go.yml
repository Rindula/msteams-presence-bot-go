# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

concurrency: 
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha }}
  cancel-in-progress: false

run-name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    needs: release
    runs-on: msteams-presence-bot-go
    permissions:
      contents: read
      packages: write
    strategy:
      matrix:
        go: [ '1.21.7' ]
        platform: [ 'linux', 'windows' ]
        arch: [ 'amd64', 'arm64' ]
    steps:
    - uses: actions/checkout@v4

    - id: lower-repo
      run: |
        echo "image=${GITHUB_REPOSITORY}" | awk '{print tolower($0)}' >> $GITHUB_OUTPUT

    - name: Set up Go
      uses: actions/setup-go@v5
      with:
        go-version: ${{ matrix.go }}

    - name: Build
      run:  CGO_ENABLED=0 GOOS=${{ matrix.platform }} GOARCH=${{ matrix.arch }} go build -o msteams-presence-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.platform == 'windows' && matrix.arch == 'amd64' && '.exe' || '' }}
    - name: Upload a Build Artifact
      uses: actions/upload-artifact@v4.3.2
      with:
        # Artifact name
        name: msteams-presence-${{ matrix.platform }}-${{ matrix.arch }}
        path: msteams-presence-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.platform == 'windows' && matrix.arch == 'amd64' && '.exe' || '' }}
    - name: Upload binaries to release
      uses: svenstaro/upload-release-action@v2
      with:
        repo_token: ${{ secrets.GITHUB_TOKEN }}
        file: msteams-presence-${{ matrix.platform }}-${{ matrix.arch }}${{ matrix.platform == 'windows' && matrix.arch == 'amd64' && '.exe' || '' }}
        asset_name: msteams-presence-${{ matrix.platform }}-${{ matrix.arch }}
        tag: ${{ needs.release.outputs.tag }}
        overwrite: true
    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      if: matrix.platform == 'linux' && github.event_name == 'push'
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      if: matrix.platform == 'linux' && github.event_name == 'push'
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      if: matrix.platform == 'linux' && github.event_name == 'push'
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Rename Artifact
      if: matrix.platform == 'linux' && github.event_name == 'push'
      run: |
        mv msteams-presence-${{ matrix.platform }}-${{ matrix.arch }} msteams-presence
    - name: Create Docker Image
      uses: docker/build-push-action@v5
      if: matrix.platform == 'linux' && github.event_name == 'push'
      with:
        context: .
        file: ./Dockerfile
        push: true
        tags: ${{ matrix.platform == 'linux' && matrix.arch == 'amd64' && format('ghcr.io/{0}:latest', steps.lower-repo.outputs.image) || format('ghcr.io/{0}:{1}-{2}', steps.lower-repo.outputs.image, matrix.platform, matrix.arch) }},${{ needs.release.outputs.tag }}
  
  release:
    runs-on: msteams-presence-bot-go
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        artifacts: "**/*"
        generateReleaseNotes: true
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        
