# This workflow will build a golang project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-go

name: Go

concurrency: 
  group: ${{ github.workflow }}-${{ github.event_name == 'pull_request' && github.event.pull_request.head.sha }}
  cancel-in-progress: false

run-name: Build and Release

on:
  push:
    branches: [ "main" ]
  pull_request:
    branches: [ "main" ]

jobs:

  build:
    needs: release
    runs-on: ubuntu-latest
    if: github.event_name == 'pull_request' || success()
    permissions:
      contents: read
      packages: write
    steps:
    - uses: actions/checkout@v4

    - id: lower-repo
      run: |
        echo "image=${GITHUB_REPOSITORY}" | awk '{print tolower($0)}' >> $GITHUB_OUTPUT

    - name: Set up QEMU
      uses: docker/setup-qemu-action@v3
      if: github.event_name == 'push'
    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      if: github.event_name == 'push'
    - name: Login to GitHub Container Registry
      uses: docker/login-action@v3
      if: github.event_name == 'push'
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Docker Image
      uses: docker/build-push-action@v5
      env:
        tag: ${{ github.event_name == 'push' && needs.release.outputs.tag || 'build' }}
      with:
        context: .
        file: ./Dockerfile
        platforms: linux/amd64,linux/arm64
        provenance: false
        push: github.event_name == 'push'
        tags: ghcr.io/${{ steps.lower-repo.outputs.image }}:$TAG
  
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    if: github.ref == 'refs/heads/main' && github.event_name == 'push'
    outputs:
      tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ secrets.GITHUB_TOKEN }}
    - name: Create Release
      id: create_release
      uses: ncipollo/release-action@v1
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      with:
        artifacts: "**/*"
        generateReleaseNotes: true
        tag: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
        
