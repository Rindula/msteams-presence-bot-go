on:
  workflow_dispatch:

jobs:
  release:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    outputs:
      tag: ${{ steps.tag_version.outputs.new_tag }}
    steps:
    - uses: actions/create-github-app-token@v1
      id: app-token
      with:
        app-id: ${{ vars.APP_ID }}
        private-key: ${{ secrets.PRIVATE_ACTION_KEY }}
    - name: Bump version and push tag
      id: tag_version
      uses: mathieudutour/github-tag-action@v6.2
      with:
        github_token: ${{ steps.app-token.outputs.token }}
    - name: Create Release
      id: create_release
      uses: softprops/action-gh-release@v2
      env:
        GITHUB_TOKEN: ${{ steps.app-token.outputs.token }}
      with:
        generate_release_notes: true
        tag_name: ${{ steps.tag_version.outputs.new_tag }}
        name: Release ${{ steps.tag_version.outputs.new_tag }}
  build_artifacts:
    runs-on: ubuntu-latest
    needs: release
    strategy:
      matrix:
        goos: [linux, darwin, windows]
        goarch: [amd64, arm64]
    permissions:
      contents: write
      attestations: write
    steps:
    - uses: actions/checkout@v4
    - name: Build
      env:
        APP_VERSION: ${{ needs.release.outputs.tag }}
        GOOS: ${{ matrix.goos }}
        GOARCH: ${{ matrix.goarch }}
      run: |
        go build -ldflags "-X main.version=${APP_VERSION}" -o msteams-presence-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }} .
    - name: Archive
      uses: actions/upload-artifact@v4
      with:
        name: msteams-presence-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        path: msteams-presence-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
    - name: Release
      uses: softprops/action-gh-release@v2
      with:
        files: msteams-presence-${{ matrix.goos }}-${{ matrix.goarch }}${{ matrix.goos == 'windows' && '.exe' || '' }}
        tag_name: ${{ needs.release.outputs.tag }}
        